<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc>
  <web>XCarouselCode</web>
  <name>AddRemoveSlide</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <parent>XCarouselClass</parent>
  <creator>xwiki:XWiki.Admin</creator>
  <author>xwiki:XWiki.Admin</author>
  <customClass/>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <creationDate>1456938150000</creationDate>
  <date>1457631519000</date>
  <contentUpdateDate>1457631519000</contentUpdateDate>
  <version>1.1</version>
  <title>AddRemoveSlide</title>
  <defaultTemplate/>
  <validationScript/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <object>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <name>XCarouselCode.AddRemoveSlide</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>6ab92c30-cc57-42c7-a234-f9ef37db0d10</guid>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>//Ajax functions for adding and deleting Slide Sections form the carousel
require(['jquery'], function ($) {
  require(['xwiki-meta'], function (xm) {

    var Target = $('.listOfSlides');
    var LauncherAdd = $('#GetNewSlide');
    var LauncherDel = $('.RemoveTarget');
    var AddRemoveSlideUrl = new XWiki.Document('AddRemoveSlide','XCarouselCode').getURL('edit') + '?xpage=get';
    var carouselPageUrl = document.location.pathname;
    var documentName   = xm ? xm.document   : $('meta[name="document"]').attr('content');
    var form_token = xm ? xm.form_token : $('meta[name="form_token"]').attr('content');
    var space = xm ? xm.space      : $('meta[name="space"]').attr('content');
    var page = xm ? xm.page       : $('meta[name="page"]').attr('content');
    var deleteUrl = new XWiki.Document(page,space).getURL('objectremove');

    $('#sectionAcordion').append('&lt;input type="hidden" name="fToken" value="' + form_token + '" /&gt;');

    //add the slide section
    LauncherAdd.click(function(){
      addSection();
    });

    //delete slide section from edit mode
    LauncherDel.click(function(){
      deleteSection($(this));
      $(this).parent().parent().remove();
    });

    //creates an object for a new slide and adds the generated html asynchronously
    function addSection(){
      var UrlAddParams = { 'xpage': 'editobject', 'xaction' : 'addObject', 'className': 'XCarouselCode.XCarouselSectionClass' };
      $.post( carouselPageUrl, UrlAddParams ).done(function(){
        // the post is done, we can now call dipslayajaxcontent
        $.get( AddRemoveSlideUrl, {'carouselName' : documentName}, function( response, status, xhr ) {
          Target.append('&lt;li class="slideSection justAppended"&gt;' + response + '&lt;/li&gt;' );
        }, "html" ).done(function(){
          //after new section has been appended
          //redefine the LauncherDel to apply also to the new elements
          var LauncherDelForNewEl = $('.justAppended .RemoveTarget');
          LauncherDelForNewEl.click(function(){
            deleteSection($(this));
            $(this).parent().parent().remove();
          });
          ajustParamsOfAttSel();
          attachmentSelectorForNewEl();
          colorPikerOn();
        });
      });
    }
    
    //delet an object coresponding to the button and section it is used by
    function deleteSection(event){
        var ObjectNo = event.data('objno');  
        var UrlDelParams = { 'form_token' : form_token, 'classname': 'XCarouselCode.XCarouselSectionClass', 'classid' : ObjectNo};
        $.post( deleteUrl, UrlDelParams );
    }

    //This function is part of the attachment selector and needs to be attached to the ajax appended elements
    //This adds the modal window when clicking the "Choese an attachment" button
    function attachmentSelectorForNewEl(){
      var loading = new Element('div', {'class' : 'imgcenter'}).update("&lt;img src=\"$xwiki.getSkinFile('icons/xwiki/ajax-loader-large.gif')\"/&gt;");
      var dialog;
      /* Hook onto the picker buttons so that the gallery is loaded via AJAX in a modal dialog. */
      $$('.justAppended .attachment-picker-start').invoke('observe', 'click', function(event) {
        event.stop();
        var targetElement = event.element();
        var url = targetElement.href;
        if (url.indexOf('?') &lt; 0) {
          url += '?';
        }
        url += "&amp;xpage=plain";
        dialog = new XWiki.widgets.ModalPopup(
          loading, {}, {
            'verticalPosition' : 'top',
            'removeOnClose' : true,
            'title' : "$services.localization.render('xe.attachmentSelector.gallery.title')"
          }
        );
        dialog.shortcuts.close.keys = [];
        dialog.showDialog();
        if (window.browser.isIE6x) {
          dialog.dialog.down().setStyle({position: "absolute"});
        } else {
          dialog.dialog.down().setStyle({position: "fixed"});
        }
        dialog.dialog.setStyle({top: document.viewport.getScrollOffsets().top + "px", position: "absolute"});
        dialog.dialogBox.setStyle({overflow: "hidden", width: "80%", margin: "0 10%"});
        new Ajax.Updater(loading.up(), url, {
          onComplete : function() {
            // Play nice with the Lightbox widget
            if (window.gallery_lb) {
              window.gallery_lb.updateImageList();
            }
            // Manually convert the special rel values into target attributes for the newly inserted content (rel="_something" =&gt; target="something")
            if (typeof (XWiki.fixLinksTargetAttribute) == 'function') {
              // Trick the function into updating link targets in edit mode; normally the conversion only takes place in view mode
              var __tmp = XWiki.contextaction;
              XWiki.contextaction = 'view';
              XWiki.fixLinksTargetAttribute(dialog.dialog);
              XWiki.contextaction = __tmp;
            }
            new XWiki.AttachmentPicker(targetElement.up('.attachment-picker'), dialog);
          }
        });
      });//end attachmentSelectorForNewEl
    }

    function ajustParamsOfAttSel(){
      var old_fulladdr = $('.justAppended .attachment-picker-start').attr('href');
      var old_addr_parts = old_fulladdr.split('?');
      var new_querystring = old_addr_parts[1].replace('XCarouselCode.AddRemoveSlide',documentName);
      $('.justAppended .attachment-picker-start').attr('href', old_addr_parts[0] + '?' + new_querystring);
    }

  });
});

</code>
    </property>
    <property>
      <name>Slide ajax req</name>
    </property>
    <property>
      <parse/>
    </property>
    <property>
      <use>currentPage</use>
    </property>
  </object>
  <content>{{velocity}}
#set($discard = $services.localization.use('document', 'XCarouselCode.XCarouselTranslations'))
#set($carouselDoc = $xwiki.getDocument($request.carouselName))
#set($objects = $carouselDoc.getObjects('XCarouselCode.XCarouselSectionClass'))
#set($lastObjectNo =  $objects.size() - 1)
#set($object = $objects[$lastObjectNo])
#set($class = $object.xWikiClass)
{{html clean="false"}}&lt;input type="checkbox"&gt;{{/html}}
(% class="dinamicArrow" %)((()))
(% class="slideTitle" %)
== Slide ${objects.size()} ==
  (% class="xform" %)
  (((
    {{html}}&lt;input type="hidden" name="objects" value="1"/&gt;{{/html}}
    (% id="AjaxRemoveSlideTarget_${object.number}" class="RemoveTarget" data-objno="${object.number}" %)
    (((
      {{html clean="false"}}&lt;input class="button RemoveSlide" type="button" value="$services.localization.render('xcarousel.slide_delete')"&gt;{{/html}}
    )))
  )))
(% class="slidePara" %)
(((
{{attachmentSelector classname="${class.name}" object="${object.number}" property="imageURL" savemode="form" displayImage="true" link="true" filter="png,jpg,gif,jpeg" width="100px" targetdocname="${carouselDoc}" /}}
#foreach($prop in $class.properties)
  #if("$!{prop.name}" != 'imageURL')
    #if("$!{prop.name}" == 'titleSize')
      #set($discard = $object.set('titleSize', '22px'))
      #set($discard = $carouselDoc.save())
    #elseif("$!{prop.name}" == 'textSize')
      #set($discard = $object.set('textSize', '14px'))
      #set($discard = $carouselDoc.save())
    #end
    ; $services.localization.render("xcarousel.slide_${prop.prettyName}")
    : $carouselDoc.display($prop.getName(), "edit", $object)        
  #end
#end##end foreach class
)))
{{/velocity}}</content>
</xwikidoc>
